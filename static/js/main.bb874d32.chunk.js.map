{"version":3,"sources":["Thumbnail.js","Topbar.js","Search.js","VtuberList.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","backgroundColor","lightBlue","Thumbnail","padding","color","blueGrey","classes","Paper","className","Root","Topbar","flexGrow","marginLeft","marginRight","paddingTop","paddingBottom","Grid","container","items","xs","X1","marginTop","marginBottom","X2","TagDescription","textAlign","paddingLeft","fontWeight","Tags","listStyle","Tag","paddingRight","display","SearchRoot","alignItems","SearchInput","flex","numberOfVtuber","tags","colors","words","Search","Hidden","smDown","map","tag","InputBase","placeholder","IconButton","card","palette","text","secondary","position","media","height","border","overlay","bottom","vtubers","name","icon","description","VtuberList","FormRow","Fragment","vtuber","item","Card","Avatar","src","mdUp","CardMedia","image","App","Helmet","content","Container","maxWidth","direction","md","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb874d32.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { lightBlue, blueGrey } from '@material-ui/core/colors';\n\nfunction Thumbnail() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.Thumbnail}>\n        <h1>Vtuber図鑑</h1>\n      </div>\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2),\n    backgroundColor: lightBlue[300],\n  },\n\n  Thumbnail: {\n    padding: \"30px 0px\",\n    color: blueGrey[800],\n  },\n}));\n\nexport default Thumbnail;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper } from '@material-ui/core';\nimport { lightBlue, blueGrey } from '@material-ui/core/colors';\n\nfunction Topbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.Root}>\n      <Grid container className={classes.Topbar}>\n        <Grid items xs>\n          <Paper className={classes.Paper}>ランダム紹介</Paper>\n        </Grid>\n        <Grid items xs>\n          <Paper className={classes.Paper}>新着更新</Paper>\n        </Grid>\n        <Grid items xs>\n          <Paper className={classes.Paper}>3</Paper>\n        </Grid>\n        <Grid items xs>\n          <Paper className={classes.Paper}>4</Paper>\n        </Grid>\n        <Grid items xs>\n          <Paper className={classes.Paper}>5</Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  Root: {\n    margin: theme.spacing(2),\n  },\n\n  Topbar: {\n    flexGrow: 1,\n  },\n\n  Paper: {\n    backgroundColor: lightBlue[300],\n    color: blueGrey[800],\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n  },\n}));\n\nexport default Topbar;\n","import React from 'react';\nimport { Paper, IconButton, InputBase, Hidden } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { lightBlue, blueGrey } from '@material-ui/core/colors';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nfunction Search() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.Root}>\n      <Paper className={classes.Paper}>\n        <Hidden smDown>\n          <h4 className={classes.X1}>記載人数 {numberOfVtuber}人</h4>\n          <h4>タグ</h4>\n        </Hidden>\n        <div>\n          <Hidden smDown>\n            <p className={classes.TagDescription}>特徴(複数選択可)</p>\n            <ul className={classes.Tags}>\n              {tags.map(tag => (\n                <li className={classes.Tag}>{tag}</li>\n              ))}\n            </ul>\n            <p className={classes.TagDescription}>イメージカラー(２つまで)</p>\n            <ul className={classes.Tags}>\n              {colors.map(tag => (\n                <li className={classes.Tag}>{tag}</li>\n              ))}\n            </ul>\n          </Hidden>\n          <Paper className={classes.SearchRoot}>\n            <InputBase\n              className={classes.SearchInput}\n              placeholder=\"Search Tags\"\n              />\n            <IconButton>\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n        </div>\n        <Hidden smDown>\n          <p>おすすめ検索ワード</p>\n          <ul className={classes.Tags}>\n            {words.map(tag => (\n              <li className={classes.Tag}>{tag}</li>\n            ))}\n          </ul>\n        </Hidden>\n      </Paper>\n    </div>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n  Root: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n\n  Paper: {\n    backgroundColor: lightBlue[300],\n    color: blueGrey[800],\n  },\n\n  X1: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(0),\n    paddingTop: theme.spacing(1),\n  },\n\n  X2: {\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(0),\n    paddingTop: theme.spacing(1),\n  },\n\n  TagDescription: {\n    textAlign: \"left\",\n    paddingLeft: theme.spacing(1),\n    fontWeight: \"bold\",\n  },\n\n  Tags: {\n    // marginLeft: theme.spacing(2),\n    // marginRight: theme.spacing(2),\n    paddingLeft: theme.spacing(1),\n    listStyle: \"none\",\n  },\n\n  Tag: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    display: \"inline-block\",\n  },\n\n  SearchRoot: {\n    padding: '2px 4px',\n    margin: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center',\n    backgroundColor: lightBlue[50],\n  },\n\n  SearchInput: {\n    marginLeft: 8,\n    flex: 1,\n  },\n}));\n\nconst numberOfVtuber = 7235;\n\nconst tags = [\n  \"赤髪(112)\",\n  \"青髪(274)\",\n  \"金髪(534)\",\n  \"黒髪(948)\",\n  \"白髪(230)\",\n  \"緑髪(201)\",\n  \"茶髪(760)\",\n]\n\nconst colors = [\n  \"赤(112)\",\n  \"青(274)\",\n  \"金(534)\",\n  \"黒(948)\",\n  \"白(230)\",\n  \"緑(201)\",\n  \"茶(760)\",\n  \"オレンジ(760)\",\n  \"ピンク(760)\",\n]\n\nconst words = [\n  \"VRChat\",\n  \"SHOWROOM\",\n  \"エモモ\",\n  \"バーチャルキャスト\"\n]\n\nexport default Search;","import React from 'react'\nimport { Grid, Card, Avatar, Hidden, CardMedia } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  card: {\n    padding: theme.spacing(1),\n    textAlign: 'Left',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n  },\n  media: {\n    height: 140,\n  },\n\n  Tags: {\n    // marginLeft: theme.spacing(2),\n    // marginRight: theme.spacing(2),\n    paddingLeft: theme.spacing(1),\n    listStyle: \"none\",\n  },\n\n  Tag: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    display: \"inline-block\",\n    margin: \"0 .3em .3em 0\",\n    border: \"1px solid #aaa\",\n  },\n  overlay: {\n     position: 'absolute',\n     bottom: '6px',\n     color: 'black',\n     backgroundColor: 'rgba(0, 0, 0, .1)'\n  },\n}));\n\nfunction VtuberList() {\n  const classes = useStyles();\n\n  function FormRow() {\n    return (\n      <React.Fragment>\n        {vtubers.map(vtuber => (\n          <Grid item xs={4}>\n            <Card className={classes.card}>\n              <Hidden smDown>\n                <Grid container>\n                  <Grid items xs={3}>\n                    <Avatar src={vtuber.icon}/>\n                  </Grid>\n                  <Grid items xs>\n                    <p>{vtuber.name}</p>\n                    <p>{vtuber.description}</p>\n                  </Grid>\n                </Grid>\n                <ul className={classes.Tags}>\n                {vtuber.tags.map(tag => (\n                  <li className={classes.Tag}>{tag}</li>\n                ))}\n                </ul>\n              </Hidden>\n              <Hidden mdUp>\n                <CardMedia className={classes.media} image={vtuber.icon} />\n                <div className={classes.overlay}>\n                  {vtuber.name}\n                </div>\n              </Hidden>\n            </Card>\n          </Grid>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1}>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n        <Grid container item xs={12} spacing={3}>\n          <FormRow />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nconst vtubers = [\n  {\n    name: \"meihei\",\n    icon: \"https://pbs.twimg.com/profile_images/914255785202298880/1060Q-hJ_400x400.jpg\",\n    description: \"python書けます。機械学習わかりません。\",\n    tags: [\"金髪\", \"Python\", \"プログラミング\"]\n  },\n\n  {\n    name: \"meihei\",\n    icon: \"https://pbs.twimg.com/profile_images/914255785202298880/1060Q-hJ_400x400.jpg\",\n    description: \"python書けます。機械学習わかりません。\",\n    tags: [\"金髪\", \"Python\", \"プログラミング\"]\n  },\n\n  {\n    name: \"meihei\",\n    icon: \"https://pbs.twimg.com/profile_images/914255785202298880/1060Q-hJ_400x400.jpg\",\n    description: \"python書けます。機械学習わかりません。\",\n    tags: [\"金髪\", \"Python\", \"プログラミング\"]\n  },\n]\n\nexport default VtuberList;","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Hidden } from '@material-ui/core';\nimport { Helmet } from 'react-helmet';\n\nimport Thumbnail from './Thumbnail';\nimport Topbar from './Topbar'\nimport Search from './Search';\nimport VtuberList from './VtuberList';\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.App}>\n      <Helmet>\n        <title>VTuber図鑑(仮)</title>\n        <meta name='description' content='VTuber図鑑のデモ' />\n      </Helmet>\n      <Container maxWidth='lg'>\n        <Thumbnail />\n        <Hidden smDown>\n          <Topbar />\n        </Hidden>\n        <Grid container direction=\"row\">\n          <Grid item xs={12} md={3}>\n            <Search />\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <VtuberList />\n          </Grid>\n      </Grid>\n      </Container>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  App: {\n    textAlign: \"center\",\n  },\n}));\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}